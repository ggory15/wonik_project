<?xml version="1.0" encoding="UTF-8"?>
<launch>

  <!--should be configured in simulation.launch-->
  <arg name="world_name_global" default="workshop.world"/>

  <!--To launch scanunifier set the value to true-->
  <arg name="scanunifier" value="true"/>

  <!--To move robot using teleop_keyboard-->
  <arg name="software_joystick" value="true"/>

<!---=================================================================================================================================================================-->

  <!--Gazebo Variables--> 
  <arg name="world" default="empty"/> 
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find wonik_simulation)/worlds/$(arg world_name_global)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>
<!---=================================================================================================================================================================-->

  <!--Robot description to param server-->
  <param name="robot_description" command="$(find xacro)/xacro '$(find wonik_simulation)/robots/wonik_robot.urdf.xacro'"/>

  <node name="robot_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
  args="-urdf -param robot_description -model wonik_robot" />
  
  <!--To publish Joint and Robot state-->

  <include file="$(find wonik_simulation)/config/controller/launch/controller_utils.launch"/>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
      <param name="rate" value="100.0"/>
  </node>

<!-- Launching wheel controllers -->

  <rosparam file="$(find wonik_simulation)/config/controller/config/wonik_robot_wheel_controller.yaml" command="load"/>
  <node name="wheel_controller_spawner" pkg="controller_manager" type="controller_manager" 
  args="spawn wonik_robot_omni_wheel_front_left_controller wonik_robot_omni_wheel_front_right_controller wonik_robot_omni_wheel_back_left_controller wonik_robot_omni_wheel_back_right_controller" respawn="false" output="screen"/>

<!-- Launching kinematics node -->

  <!-- upload parameters -->
        <rosparam command="load" ns="kinematics_mecanum" file="$(find wonik_simulation)/config/controller/config/wonik_controller_setup.yaml"/>
  
  <!-- start simulation node -->
        <node pkg="wonik_kinematics_mecanum" type="wonik_kinematics_mecanum_sim_node" ns="kinematics_mecanum" name="wonik_kinematics_mecanum_sim_node" respawn="false" output="screen"/>


<!---=================================================================================================================================================================-->
 
 <!--wonik control Package  **To use teleop-keyboard and joystick, wonik_control package must be cloned to the workspace**--> 
 
 <!--if arg software_joystick is set to true-->

 <group if="$(arg software_joystick)">
   <node pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" name="teleop_keyboard"  output="screen">
  </node>
 </group>
<!---=================================================================================================================================================================-->

</launch>
